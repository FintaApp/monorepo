fragment DBUserFields on users {
  id
  display_name: displayName
  metadata
  disabled
  created_at: createdAt
}

fragment AllStripeDataFields on StripeData {
  trialEndsAt
  hasAppAccess
  customer {
    id
    createdAt
  }
  subscription {
    id
    status
    interval
    cancelAtPeriodEnd
    endedAt
    currentPeriodEnd
    trialStartedAt
    trialEndedAt
  }
}

fragment AllUserFields on users {
  __typename
  id
  email
  display_name: displayName
  created_at: createdAt
  unique_destinations: destinations(distinct_on: integration_id, where: { disabled_at: { _is_null: true }}) {
    integration_id
  }
  destinations_aggregate(where: { disabled_at: { _is_null: true }}) {
    aggregate {
      count
    }
  }
  stripeData {
    ...AllStripeDataFields
  }
}

query GetBaseUser($user_id: uuid!) {
  user(id: $user_id) {
    id
    email
    display_name: displayName
    metadata
    disabled
  }
}

query GetUser($user_id: uuid!) {
  user(id: $user_id) {
    ...AllUserFields
  }
}

mutation UpdateUser($user_id: uuid!, $_set: users_set_input = {}, $_append: users_append_input = {} ) {
  updateUser(pk_columns: {id: $user_id}, _set: $_set, _append: $_append) {
    ...AllUserFields
  }
}