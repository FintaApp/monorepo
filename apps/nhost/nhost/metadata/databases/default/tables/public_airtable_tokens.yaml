table:
  name: airtable_tokens
  schema: public
configuration:
  column_config:
    access_token:
      custom_name: accessToken
    access_token_expires_at:
      custom_name: accessTokenExpiresAt
    created_at:
      custom_name: createdAt
    refresh_token:
      custom_name: refreshToken
    refresh_token_expires_at:
      custom_name: refreshTokenExpiresAt
    refreshed_at:
      custom_name: refreshedAt
    token_type:
      custom_name: tokenType
    updated_at:
      custom_name: updatedAt
    user_id:
      custom_name: userId
  custom_column_names:
    access_token: accessToken
    access_token_expires_at: accessTokenExpiresAt
    created_at: createdAt
    refresh_token: refreshToken
    refresh_token_expires_at: refreshTokenExpiresAt
    refreshed_at: refreshedAt
    token_type: tokenType
    updated_at: updatedAt
    user_id: userId
  custom_name: airtableTokens
  custom_root_fields:
    delete: deleteAirtableTokens
    delete_by_pk: deleteAirtableToken
    insert: insertAirtableTokens
    insert_one: insertAirtableToken
    select: airtableTokens
    select_by_pk: airtableToken
    update: updateAirtableTokens
    update_by_pk: updateAirtableToken
select_permissions:
  - role: user
    permission:
      columns:
        - id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
event_triggers:
  - name: onInsertAirtableToken
    definition:
      enable_manual: false
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{API_BASE_URL}}/db/events'
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
