- name: remote_schema
  definition:
    url: '{{NHOST_BACKEND_URL}}/v1/functions/remote_schema'
    timeout_seconds: 60
    customization: {}
  permissions:
    - role: user
      definition:
        schema: |
          schema {
            query: Query
          }
          scalar Date
          scalar uuid
          type BillingPortalSession {
            id: String!
            url: String!
          }
          type CheckoutPortalSession {
            id: String!
            url: String!
          }
          type Query {
            billingPortalSession(customerId: String!, returnUrl: String!): BillingPortalSession!
            checkoutPortalSession(customerId: String!, priceId: String!, successUrl: String!, cancelUrl: String!, trialEnd: Int, trialPeriodDays: Int): CheckoutPortalSession!
            remoteSchemaUserProfile(userId: uuid!): RemoteSchemaUserProfile!
            stripePrices: [StripePrice!]!
          }
          type RemoteSchemaUserProfile {
            isSubscribedGeneral: Boolean!
            isSubscribedSyncUpdates: Boolean!
            stripeCustomerId: String!
            stripeData: StripeData!
            syncUpdatesFrequency: SyncUpdatesFrequency!
            syncUpdatesJobId: String
            timezone: String
          }
          type StripeCustomer {
            createdAt: Date!
            id: String!
          }
          type StripeData {
            customer: StripeCustomer!
            hasAppAccess: Boolean!
            subscription: StripeSubscription
            trialEndsAt: Date!
          }
          type StripePrice {
            id: String!
            interval: PriceInterval!
            productId: String!
            unitAmount: Float!
          }
          type StripeSubscription {
            cancelAtPeriodEnd: Boolean!
            canceledAt: Date
            currentPeriodEnd: Date!
            currentPeriodStart: Date!
            endedAt: Date
            id: String!
            interval: PriceInterval!
            startedAt: Date!
            status: SubscriptionStatus!
            trialEndedAt: Date
            trialStartedAt: Date
          }
          enum PriceInterval {
            day
            month
            week
            year
          }
          enum SubscriptionStatus {
            active
            canceled
            incomplete
            incomplete_expired
            past_due
            trialing
            unpaid
          }
          enum SyncUpdatesFrequency {
            daily
            monthly
            quarterly
            weekly
            yearly
          }
